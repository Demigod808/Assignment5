#include<stdio.h>

#define SIZE 10
struct ResultSet {
	int n;
	int result[10];
};

int main()
{
    
int array1[SIZE];
int array2[SIZE];
int i; 
int row; 
int column;
int num1;
int num2; 
int *pointer;
int character;
int array3[20]; //2 sets of size 10 potentiall an array of 20
int flag;           //state for if elements from 2 sets are the same
int accept;

printf(" Please enter the size for array 1 \n"); //creates array of input size
    scanf(" %d",&num1);
 
printf("Please enter elements for array 1 \n" );

for(i=0;i<num1;i++)                                     //scan in elements for the set size
{
    scanf(" %d",array1 + i);
}

printf("Please enter the size of array 2 \n"); //creates array of input size
    scanf(" %d",&num2);

printf("Please enter elements for array 2 \n" );    
    for(i=0; i<num2; i++)                       
    {
        scanf(" %d",array2 + i);              //scan in elements for the set size
    }
    do
    {
        printf("Please choose which operation you would like to perform\n");
        printf("1 for Union Operation, 2 for Interect, 3 for Complement\n");    //input to decide union, intersect, complement
            scanf("%d",&character);
        
        switch(character)
        {
            case 1: //SET UNION OF TWO SETS ( WORKS CORRECTLY)
            column=0;
            for(i=0; i<num1; i++)
            {
                *(array3 + column) = *(array1 + i);
                column++;
            }
            for(i=0;i<num2;i++)
            {
                flag=1;
                for(row=0;row<num1;row++)
                {
                    if(*(array2 + i)==*(array1 + row)) //compare if they are the same
                    {
                        flag=0;
                        break;
                    }
                }
                if(flag==1)
                {
                    *(array3 + column) = *(array2 + i);  //compare if they are the same
                    column++;
                }
            }
            pointer = column;
            printf("The Union of the two array is the new set \n");
            for(column=0;column <pointer; column++)
            {
                printf(" %d, ", *(array3 + column));
                                                  
            }
            break;
            
            
            case 2: //INTERSECT //array is printing out the location in memory needs to fix
            column=0;
            for(i=0; i<num2; i++)
            {
                flag=1;
                for(row=0; row<num1; row++)
                {
                    if(*(array2 + i) == *(array1 + row))   //compare if they are the same
                    {
                    flag=0;
                    break;
                    }
                }
                if(flag==0)
                {
                    *(array2 + column) = *(array2 + i);    
                    column++;
                }
            }
            pointer = column;
            for(column=0; column<pointer; column++)  
            {
                 printf("%d, ",*(array3 + column)); 
            }
            break;
            
            
            
            
            
            case 3: //SET COMPLEMENT Set complement not working correctly.
            column=0;
            for(i=0; i<num1; i++)
            {
                flag=1;
                for(row=0; row<num2; row++)
                {
                    if(*(array1 + i)== *(array2 + row))    //comparitor
                    {
                    flag=0;
                    break;
                    }
                }
                if(flag==1)
                {
                    *(array3 + column)= *(array1 + i);    
                    column++;
                }
            }
            pointer = column;
            for(column=0; column<pointer; column++)
            {
                printf(" %d ", *(array3 + column)); 
            }
            break;
            }
    printf("\n Would you like to get a use a different operation for the two arrays? [1 = Yes & 2 = No] \n");
        scanf("%d",&accept);
    }
    while(accept==1);
}
